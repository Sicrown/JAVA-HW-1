# 1 - Реализуйте алгоритм сортировки пузырьком числового массива, результат после каждой итерации запишите в лог-файл.

package homework_2;

import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import java.io.IOException;
import java.util.logging.FileHandler;
import java.util.logging.Level;

public class task1 {
    public static void bubbleSort(int arr[], String pathFile) {
        int n = arr.length;
        var logger = WriteLog(pathFile);
        for (int i = 0; i < n - 1; i++)
            for (int j = 0; j < n - i - 1; j++)
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                    logger.log(Level.INFO, String.format("%s больше %s. Элементы поменяны местами.",
                            String.valueOf(arr[j + 1]), String.valueOf(arr[j])));
                }
    }

    public static void printArray(int arr[]) {
        int n = arr.length;
        for (int i = 0; i < n; ++i)
            System.out.print(arr[i] + " ");
        System.out.println();
    }

    public static Logger WriteLog(String pathFile) {
        try {

            Logger logger = Logger.getLogger(task1.class.getName());
            FileHandler fh = new FileHandler(pathFile, true);
            fh.setEncoding("UTF-8");
            logger.addHandler(fh);
            SimpleFormatter sf = new SimpleFormatter();
            fh.setFormatter(sf);
            return logger;
        } catch (Exception e) {
            System.out.println("Что-то пошло не так");
        }
        return null;
    }

    public static void main(String[] args) throws IOException {
        // Реализуйте алгоритм сортировки пузырьком числового массива, результат после
        // каждой итерации запишите в лог-файл.
        int arr[] = { 64, 34, 25, 90, 12, 22, 11 };
        String pathProject = System.getProperty("user.dir");
        System.out.println(pathProject);
        String pathFile = pathProject.concat("/homework_2/task1.log");
        printArray(arr);
        bubbleSort(arr, pathFile);
        printArray(arr);
    }
}



# 2 Дана json строка (сохранить в файл и читать из файла) (ЕСЛИ НЕ ПОЛУЧАЕТСЯ JSON, то сделайте получение через обычный текстовый файл!!!) [{"фамилия":"Иванов","оценка":"5","предмет":"Математика"},{"фамилия":"Петрова", "оценка":"4","предмет":"Информатика"},{"фамилия":"Краснов","оценка":"5","предмет":"Физика"}]
Написать метод(ы), который распарсит json и, используя StringBuilder, создаст строки вида: Студент [фамилия] получил [оценка] по предмету [предмет].

Пример вывода:
Студент Иванов получил 5 по предмету Математика.
Студент Петрова получил 4 по предмету Информатика.
Студент Краснов получил 5 по предмету Физика.

Напишите метод, который принимает на вход строку (String) и определяет является ли строка палиндромом (возвращает boolean значение).


package homework_2;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Dictionary;
import java.util.Hashtable;
import java.util.List;

public class task2 {
  public static void WriteFile(List<Dictionary<String, String>> students) {
    try {
      String pathProject = System.getProperty("user.dir");
      System.out.println(pathProject);
      String pathFile = pathProject.concat("/homework_2/task2.txt");
      FileWriter fw = new FileWriter(pathFile, StandardCharsets.UTF_8);
      fw.write(students.toString());
      fw.close();
    } catch (Exception exception) {
      System.out.println("Не получилось");
    }
  }

  public static void ReadFile(List<Dictionary<String, String>> students) {
    try {
      String pathProject = System.getProperty("user.dir");
      System.out.println(pathProject);
      String pathFile = pathProject.concat("/homework_2/task2.txt");
      BufferedReader br = new BufferedReader(new FileReader(pathFile, StandardCharsets.UTF_8));
      String line = br.readLine();
      System.out.println(line);
      br.close();
    } catch (Exception exeption) {
      exeption.printStackTrace();
    }
  }

  public static void StringParse(List<Dictionary<String, String>> students) {
    StringBuilder sb = new StringBuilder();
    for (Dictionary<String, String> student : students) {
      sb.append("Студент ").append(student.get("фамилия")).append(" получил ").append(student.get("оценка"))
          .append(" по предмету ").append(student.get("предмет")).append("\n");
    }
    System.out.println(sb.toString());
  }

  public static void main(String[] args) {
    // Дана json строка (сохранить в файл и читать из файла)
    // [{"фамилия":"Иванов","оценка":"5","предмет":"Математика"},{"фамилия":"Петрова",
    // "оценка":"4","предмет":"Информатика"},{"фамилия":"Краснов","оценка":"5","предмет":"Физика"}]
    // Написать метод(ы), который распарсит json и, используя StringBuilder, создаст
    // строки вида: Студент [фамилия] получил [оценка] по предмету [предмет].

    // Пример вывода:
    // Студент Иванов получил 5 по предмету Математика.
    // Студент Петрова получил 4 по предмету Информатика.
    // Студент Краснов получил 5 по предмету Физика.
    Dictionary<String, String> student1 = new Hashtable<>();
    student1.put("фамилия", "Иванов");
    student1.put("оценка", "5");
    student1.put("предмет", "Математика");
    Dictionary<String, String> student2 = new Hashtable<>();
    student2.put("фамилия", "Петрова");
    student2.put("оценка", "4");
    student2.put("предмет", "Информатика");
    Dictionary<String, String> student3 = new Hashtable<>();
    student3.put("фамилия", "Краснов");
    student3.put("оценка", "5");
    student3.put("предмет", "Физика");
    List<Dictionary<String, String>> students = new ArrayList<>();
    students.add(student1);
    students.add(student2);
    students.add(student3);
    WriteFile(students);
    ReadFile(students);
    StringParse(students);

  }
  
package homework_2;

public class task3 {
    public static boolean isPalindrome(String text) {
        String clean = text.replaceAll("\\s+", "").toLowerCase();
        StringBuilder plain = new StringBuilder(clean);
        StringBuilder reverse = plain.reverse();
        return (reverse.toString()).equals(clean);
    }
    public static void main(String[] args) {
        //Напишите метод, который принимает на вход строку (String) и определяет является ли строка палиндромом (возвращает boolean значение).
        String text = "aabaa";
        System.out.println(isPalindrome(text));
